---
import Post from '~/components/Post.astro'
import LayoutDefault from '~/layouts/LayoutDefault.astro'
import { getPosts } from '~/utils'
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'
import Pagination from '~/components/Pagination.astro'
import Comment from '~/components/Comment.astro';

export const getStaticPaths = (async ({}) => {
  const posts = await getPosts()
  return posts.map((post, idx) => {
    const prev = posts[idx - 1]
    const next = posts[idx + 1]
    return {
      params: { slug: post.slug },
      props: { entry: post, next, prev },
    }
  })
}) satisfies GetStaticPaths

// type Params = InferGetStaticParamsType<typeof getStaticPaths>
type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { entry, prev, next } = Astro.props
const { Content } = await entry.render()
const { translate: t } = Astro.locals

function getUrl(slug: string) {
  return `/posts/${slug}`
}
---

<LayoutDefault title={entry.data.title} desc={entry.data.description} banner={entry.data.banner}>
  <Post post={entry}>
    <Content />
  </Post>
  <Pagination
    showLeft={Boolean(prev)}
    leftTitle={`${t('prev_post')}: ${prev?.data.title}`}
    leftUrl={getUrl(prev?.slug)}
    showRight={Boolean(next)}
    rightTitle={`${t('next_post')}: ${next?.data.title}`}
    rightUrl={getUrl(next?.slug)}
    showPageCount={false}
  />
    <Comment />
</LayoutDefault>

<script>
  import '@github/clipboard-copy-element'

  document.addEventListener('clipboard-copy', function (event) {
    const target = event.target as HTMLElement
    const icon = target.querySelector('.icon') as HTMLElement
    icon.classList.replace('i-mdi-content-copy', 'i-mdi-check')
    setTimeout(() => {
      icon.classList.replace('i-mdi-check', 'i-mdi-content-copy')
    }, 1500)
  })

  const codeBlocks = Array.from(document.querySelectorAll('pre'))
  const icon = "<div class='i-mdi-content-copy icon text-white'></div>"
  for (let codeBlock of codeBlocks) {
    let wrapper = document.createElement('div')
    wrapper.className = 'code-container'

    let copyButton = document.createElement('clipboard-copy')
    let code = codeBlock.querySelector('code')
    copyButton.value = code?.innerText ?? ''
    copyButton.className = 'clipboard-copy'
    copyButton.innerHTML = icon

    codeBlock.appendChild(copyButton)

    codeBlock.parentNode?.insertBefore(wrapper, codeBlock)
    wrapper.appendChild(codeBlock)
  }
</script>

<style is:global>
  .code-container {
    position: relative;
  }
  .clipboard-copy {
    position: absolute;
    top: .5rem;
    right: .5rem;
    width: 1.75rem;
    height: 1.75rem;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 0.25rem;
  }

  .clipboard-copy:hover {
    background-color: #30363d;
  }
  
.post-title {
  display: inline;
  font-size: 2.5rem;
  background-image: linear-gradient(to right, #00e99b, #00dfe3);
  color: #ffffff; 
  background-clip: text;
  -webkit-background-clip: text; 
  -webkit-text-fill-color: transparent; 
}
.post-mate {
  margin-top: 10px;
  font-size: 15px;
  border-bottom-width: 2px; /* 设置下边框宽度 */
  border-bottom-style: dashed; /* 设置下边框样式为虚线 */
  border-bottom-color: #00ffaa;
  padding-bottom: 10px;
}
.post-mate time {
  background: #99f5d1;
}
.post-card h2 {
  font-size: 30px;
  margin-top: 30px;
}
.post-card header {
  margin-bottom: 20px;
}
.post-card header a {
  text-decoration: none;
}
.post-card a {
  text-decoration: underline;
  text-decoration-style: dotted;
  text-underline-offset: 0.3em;
  text-decoration-color: #00e99b;
  text-decoration-thickness: 2px;
}
.post-card hr {
  border-top: 2px dashed #d3d3d3; /* 2px thick, dashed, light gray color */
  margin: 20px 0;
}
.post-card p {
  line-height: 40px;
}
.post-card img {
  border-radius: 8px;
  margin-top: 20px;
  margin-bottom: 20px;
  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.3); /* 阴影效果 */
  transition: box-shadow 0.3s ease, transform 0.3s ease; /* 平滑过渡阴影和缩放效果 */
}
.post-card img:hover {
  box-shadow: 8px 8px 16px rgba(0, 0, 0, 0.5); /* 鼠标悬停时加深阴影 */
  transform: scale(1.002); /* 鼠标悬停时轻微放大图片 */
}
.post-card pre {
  margin-bottom: 5px;
  padding: 8px; /* 设置内边距 */
  border-radius: 8px; /* 设置圆角 */
}
.post-card code {
  background: #282c34;
  color: #d2d2d2;
  padding: 3px; /* 设置内边距 */
  border-radius: 5px; /* 设置圆角 */
}
.post-card ul li {
    margin: 10px 0;
}

.post-card ul li::before {
    content: "•"; /* 在每个列表项前添加一个小圆点 */
    margin-right: 10px;
    color: #00dfe3;
    font-size: 20px; /* 调整圆点的大小 */
}
.post-card ol {
    counter-reset: item;
    margin: 0;
    padding: 0;
    list-style-type: none;
}

.post-card ol li {
    position: relative;
    margin: 0.5rem 0;
    padding-left: 2rem;
}

.post-card ol li:before {
    content: counter(item) ".";
    counter-increment: item;
    position: absolute;
    left: 10px;
    font-weight: bold;
    color: #2c3e50; /* 可以根据需要调整颜色 */
    font-size: 1.0rem; /* 可以根据需要调整字体大小 */
}
.items-center {
  display: flex;
  justify-content: space-between; /* 使子元素分布在容器的两边 */
  align-items: center; /* 对齐项目的垂直位置 */
  padding: 0 5px;
}
article {
  border-bottom-width: 2px; /* 设置下边框宽度 */
  border-bottom-style: dashed; /* 设置下边框样式为虚线 */
  border-bottom-color: #d2d2d2;
  padding-bottom: 50px;
  margin-top: 50px;
}
</style>
